
class DECLARATIONS{
protected:
	SYMBOLS::SYMBOL	LSY0;
	bool	NOTDONE;
	int		*DUMMYVAR; 
};

class DECLARATIONPART:
	public COMPILERDATA
#if 0
	public DECLARATIONS
#endif
{
public:
class TYP;
class USESDECLARATION;
class PROCDECLARATION;
private:

protected:
	void TYP1(SETOFSYS FSYS, STP &FSP, ADDRRANGE &FSIZE);
	void USESDECLARATION(bool MAGIC);
	void LABELDECLARATION(const SETOFSYS &FSYS);
	void CONSTDECLARATION(const SETOFSYS &FSYS);
	void TYPEDECLARATION(const SETOFSYS &FSYS);
	void VARDECLARATION(const SETOFSYS &FSYS);
	void PROCDECLARATION(const SETOFSYS &,SYMBOLS::SYMBOL,bool,bool&);
	void PARAMETERLIST(SETOFSYS, SYMBOLS::SYMBOL, CTP &, CTP, bool, bool);

public:
	DECLARATIONPART ();
	DECLARATIONPART (PASCALCOMPILER *);
	virtual ~DECLARATIONPART ();
	void MAIN (const SETOFSYS &FSYS);
};

