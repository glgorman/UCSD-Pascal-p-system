  
#include "stdafx.h"
#include <vector>
#include "../Frame Lisp/intrinsics.h"

pascal_error error_list [] =
{
	pascal_error(1,"Error in simple type"), 
	pascal_error(2,"Identifier expected"),
	pascal_error(3,"'PROGRAM' expected"),
	pascal_error(4,"')' expected"),
	pascal_error(5,": expected"),
	pascal_error(6,"Illegal symbol (possibly missing ';' on line above)"), 
	pascal_error(7,"Error in parameter list"), 
	pascal_error(8,"'OF' expected"), 
	pascal_error(9,"'(' expected"), 
	pascal_error(10,"Error in type"), 
	pascal_error(11,"[ expected"), 
	pascal_error(12,"']'expected"), 
	pascal_error(13,"'END' expected"), 
	pascal_error(14,"';' expected (possibly on line above)"), 
	pascal_error(15,"INTEGER expected"), 
	pascal_error(16,"= expected"), 
	pascal_error(17,"'BEGIN' expected"),
	pascal_error(18,"Error in declaration part"), 
	pascal_error(19,"Error in <field-list>"), 
	pascal_error(20,"'.'expected"), 
	pascal_error(21,"'*' expected"), 
	pascal_error(22,"'Interface' expected"), 
	pascal_error(23,"'Implementation' expected"), 
	pascal_error(24,"'Unit' expected"), 
	pascal_error(50,"Error in constant"), 
	pascal_error(51,"'=' expected"), 
	pascal_error(52,"'THEN' expected"), 
	pascal_error(53,"'UNTIL' expected"),
	pascal_error(54,"'DO' expected"), 
	pascal_error(55,"'TO' or 'DOWNTO' expected in for statement"), 
	pascal_error(56,"'IF' expected"), 
	pascal_error(57,"'FILE' expected"), 
	pascal_error(58,"Error in <factor> (bad expression)"), 
	pascal_error(59,"Error in variable"), 
	pascal_error(101,"Identifier declared twice"),  
	pascal_error(102,"Low bound exceeds high bound"), 
	pascal_error(103,"Identifier is not of the appropriate class"), 
	pascal_error(104,"Undeclared identifier"), 
	pascal_error(105,"Sign not allowed"), 
	pascal_error(106,"Number expected"), 
	pascal_error(107,"Incompatible subrange types"), 
	pascal_error(108,"File not allowed here"), 
	pascal_error(109,"Type must not be real"), 
	pascal_error(110,"<tagfield> type must be scalar or subrange"), 
	pascal_error(111,"Incompatible with <tagfield> part"), 
	pascal_error(112,"Index type must not be real"), 
	pascal_error(113,"Index type must be a scalar or a subrange"), 
	pascal_error(114,"Base type must not be real"), 
	pascal_error(115,"Base type must be a scalar or a subrange"), 
	pascal_error(116,"Error in type of standard procedure parameter"), 
	pascal_error(117,"Unsatisfied forward reference"), 
	pascal_error(118,"Forward reference type identifier in variable declaration"), 
	pascal_error(119,"Re-specified parameters not OK for a forward declared procedure"), 
	pascal_error(120,"Function result type must be scalar, subrange or pointer"), 
	pascal_error(121,"File value parameter not allowed"), 
	pascal_error(122,"A forward declared function's result type can't be re-specified"), 
	pascal_error(123,"Missing result type in function declaration"), 
	pascal_error(124,"F-format for reals only"),
	pascal_error(125,"Error in type of standard procedure parameter"), 
	pascal_error(126,"Number of parameters does not agree with declaration"), 
	pascal_error(127,"Illegal parameter substitution"), 
	pascal_error(128,"Result type does not agree with declaration"), 
	pascal_error(129,"Type conflict of operands"), 
	pascal_error(130,"Expression is not of set type"), 
	pascal_error(131,"Tests on equality allowed only"), 
	pascal_error(132,"Strict inclusion not allowed"), 
	pascal_error(133,"File comparison not allowed"), 
	pascal_error(134,"Illegal type of operand(s)"), 
	pascal_error(135,"Type of operand must be boolean"), 
	pascal_error(136,"Set element type must be scalar or subrange"), 
	pascal_error(137,"Set element types must be compatible"), 
	pascal_error(138,"Type of variable is not array"), 
	pascal_error(139,"Index type is not compatible with the declaration"), 
	pascal_error(140,"Type of variable is not record"), 
	pascal_error(141,"Type of variable must be file or pointer"), 
	pascal_error(142,"Illegal parameter solution"), 
	pascal_error(143,"Illegal type of loop control variable"), 
	pascal_error(144,"Illegal type of expression"), 
	pascal_error(145,"Type conflict"), 
	pascal_error(146,"Assignment of files not allowed"), 
	pascal_error(147,"Label type incompatible with selecting expression"), 
	pascal_error(148,"Subrange bounds must be scalar"), 
	pascal_error(149,"Index type must be integer"), 
	pascal_error(150,"Assignment to standard function is not allowed"), 
	pascal_error(151,"Assignment to formal function is not allowed"), 
	pascal_error(152,"No such field in this record"), 
	pascal_error(153,"Type error in read"), 
	pascal_error(154,"Actual parameter must be a variable"), 
	pascal_error(155,"Control variable cannot be formal or non-local"), 
	pascal_error(156,"Multidefined case label"), 
	pascal_error(157,"Too many cases in case statement"), 
	pascal_error(158,"No such variant in this record"), 
	pascal_error(159,"Real or string tagfields not allowed"), 
	pascal_error(160,"Previous declaration was not forward"), 
	pascal_error(161,"Again forward declared"), 
	pascal_error(162,"Parameter size must be constant"), 
	pascal_error(163,"Missing variant in declaration"), 
	pascal_error(164,"Substitution of standard proc/func not allowed"), 
	pascal_error(165,"Multidefined label"), 
	pascal_error(166,"Multideclared label"), 
	pascal_error(167,"Undeclared label"), 
	pascal_error(168,"Undefined label"), 
	pascal_error(169,"Error in base set"), 
	pascal_error(170,"Value parameter expected"), 
	pascal_error(171,"Standard file was re-declared"), 
	pascal_error(172,"Undeclared external file"), 
	pascal_error(174,"Pascal function or procedure expected"), 
	pascal_error(182,"Nested units not allowed"), 
	pascal_error(183,"External declaration not allowed at this nesting level"), 
	pascal_error(184,"External declaration not allowed in interface section"), 
	pascal_error(185,"Segment declaration not allowed in unit"), 
	pascal_error(186,"Labels not allowed in interface section"), 
	pascal_error(187,"Attempt to open library unsuccessful"), 
	pascal_error(188,"Unit not declared in previous 'Uses' declaration"), 
	pascal_error(189,"'Uses' not allowed at this nesting level"), 
	pascal_error(190,"Unit not in library"), 
	pascal_error(191,"No private files"), 
	pascal_error(192,"'Uses' must be in interface section"),
	pascal_error(193,"Not enough room for this operation"), 
	pascal_error(194,"Comment must appear at top of program"), 
	pascal_error(195,"Unit not importable"), 
	pascal_error(201,"Error in real numbe.r - digit expected"), 
	pascal_error(202,"String constant must not exceed source line"), 
	pascal_error(203,"Integer constant exceeds range"), 
	pascal_error(204,"8 or 9 in octal number"), 
	pascal_error(250,"Too many scopes of nested identifiers"), 
	pascal_error(251,"Too many nested procedures or functions"), 
	pascal_error(252,"Too many forward references of procedure entries"), 
	pascal_error(253,"Procedure too long"),
	pascal_error(254,"Too many long constants in this procedure"), 
	pascal_error(256,"Too many external references"), 
	pascal_error(257,"Too many externals"), 
	pascal_error(258,"Too many local files"), 
	pascal_error(259,"Expression too complicated"), 
	pascal_error(300,"Division by zero"), 
	pascal_error(301,"No case provided for this value"), 
	pascal_error(302,"Index expression out of bounds"), 
	pascal_error(303,"Value to be assigned is out of bounds"), 
	pascal_error(304,"Element expression out of range"),  
	pascal_error(350,"No data segment allocated"), 
	pascal_error(351,"Segment used twice"), 
	pascal_error(352,"No code segment allocated"), 
	pascal_error(353,"Non-intrinsic unit called from intrinsic unit"), 
	pascal_error(354,"Too many segments for the segment dictionary"), 
	pascal_error(398,"Implementation restriction"), 
	pascal_error(399,"Implementation restriction"), 
	pascal_error(400,"Illegal character in text"), 
	pascal_error(401,"Unexpected end of input"), 
	pascal_error(402,"Error in writing code file, not enough room"), 
	pascal_error(403,"Error in reading include file"),
	pascal_error(404,"Error in writing list file, not enough room"), 
	pascal_error(405,"Call not allowed in separate procedure"), 
	pascal_error(406,"Include file not legal"), 
	pascal_error(407,"Too many libraries"),
};

char *ID_NAMES1[] =
{
	"NONE","TYPES","KONST","FORMALVARS","ACTUALVARS","FIELD","PROC1","FUNC","MODULE",
};

char *SYMBOL_NAMES1[] =
{
	"IDENT","COMMA","COLON","SEMICOLON","LPARENT","RPARENT","DOSY","TOSY",
	"DOWNTOSY","ENDSY","UNTILSY","OFSY","THENSY","ELSESY","BECOMES","LBRACK",
	"RBRACK","ARROW","PERIOD","BEGINSY","IFSY","CASESY","REPEATSY","WHILESY",
	"FORSY","WITHSY","GOTOSY","LABELSY","CONSTSY","TYPESY","VARSY","PROCSY",
	"FUNCSY","PROGSY","FORWARDSY","INTCONST","REALCONST","STRINGCONST",
	"NOTSY","MULOP","ADDOP","RELOP","SETSY","PACKEDSY","ARRAYSY","RECORDSY",
	"FILESY","OTHERSY","LONGCONST","USESSY","UNITSY","INTERSY","IMPLESY",
	"EXTERNLSY","SEPARATSY","CONNENTSY","MAXSYMBOL",
};

char *SYMBOL_NAMES2[] =
{
	"identifier",
	",",
	":",
	";",
	"(",
	")",
	"DO",
	"TO",
	"DOWNTO",
	"END",
	"UNTIL",
	"OF",
	"THEN",
	"ELSE",
	":=",
	"[",
	"]",
	"^",
	".",
	"BEGIN",
	"IF",
	"CASE",
	"REPEAT",
	"WHILE",
	"FOR",
	"WITH",
	"GOTO",
	"LABEL",
	"CONST",
	"TYPE",
	"VAR",
	"PROCEDURE",
	"FUNCTION",
	"PROGRAM",
	"FORWARD",
	"INTCONST",
	"REALCONST",
	"STRINGCONST",
	"NOT",
	"*",
	"+",
	"=",
	"SET",
	"PACKED",
	"ARRAY",
	"RECORD",
	"FILE",
	"OTHER",
	"LONGCONST",
	"USES",
	"UNIT",
	"INTERFACE",
	"IMPLEMENTATION",
	"EXTERNAL",
	"<sp>",
	"COMMENTSY",
	"MAXSYMBOL",
};